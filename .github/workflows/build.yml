name: Build
on:
  push:
    paths:
      - 'Makefile'
      - 'go.mod'
      - '**.go'
      - '.github/workflows/build.yml'
      - 'Dockerfile*'
env:
  go_version: '1.16'
  authproxy_image: docker.pkg.github.com/${{ github.repository }}/visp-authproxy

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - name: run tests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          go mod download
          make test-coverage
          bash <(curl -s https://codecov.io/bash)
  authproxy:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build auth proxy Docker image
        run: docker build --tag ${authproxy_image}:latest -f Dockerfile.authproxy .
      - name: Push Docker image to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${authproxy_image}:latest
  build:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - test
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - name: Download dependencies
        run: |
          go mod download
      - name: Build binaries
        run: make linux-amd64 darwin-amd64 windows-amd64
      - name: Delete latest release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: true
          tag_name: latest
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: latest
          release_name: Latest build
          draft: false
          prerelease: false
      - name: Upload linux-amd64 binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/visp-linux-amd64
          asset_name: visp-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload darwin-amd64 binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/visp-darwin-amd64
          asset_name: visp-darwin-amd64
          asset_content_type: application/octet-stream
      - name: Upload windows-amd64 binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/visp-windows-amd64
          asset_name: visp-windows-amd64
          asset_content_type: application/octet-stream
